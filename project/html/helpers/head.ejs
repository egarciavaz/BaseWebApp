<meta charset="UTF-8">
<title>Base Web App</title>


<!-- First we import our css files -->

<!-- bootstrap css -->
<link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />

<!-- Google font CSS -->
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700" rel="stylesheet">

<!-- this app's own css -->
<link rel="stylesheet" type="text/css" href="css/main.css"/>



<!-- Next import js files -->

<!-- first we import jquery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<!-- then bootstrap -->
<script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>var apiKey="<%= process.env.API_KEY %>";</script>
<script>var firebaseApiKey="<%= process.env.FIREBASE_API_KEY %>";</script>

<script type="module">
  // Import the functions you need from the SDKs you need
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-app.js";
import { getAuth, signInWithPopup, GoogleAuthProvider } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-auth.js";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
    apiKey: firebaseApiKey,
    authDomain: "hubspot-webapp-8b5f7.firebaseapp.com",
    databaseURL: "https://hubspot-webapp-8b5f7-default-rtdb.firebaseio.com",
    projectId: "hubspot-webapp-8b5f7",
    storageBucket: "hubspot-webapp-8b5f7.appspot.com",
    messagingSenderId: "966181045014",
    appId: "1:966181045014:web:2602213c76118eae034637"
  };
  
  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const provider = new GoogleAuthProvider();
  const auth = getAuth(app);
  console.log(app);
  console.log(auth);

  signInWithPopup(auth, provider)
  .then((result) => {
    // This gives you a Google Access Token. You can use it to access the Google API.
    const credential = GoogleAuthProvider.credentialFromResult(result);
    const token = credential.accessToken;
    // The signed-in user info.
    const user = result.user;
    // IdP data available using getAdditionalUserInfo(result)
    // ...
  }).catch((error) => {
    // Handle Errors here.
    const errorCode = error.code;
    const errorMessage = error.message;
    // The email of the user's account used.
    const email = error.customData.email;
    // The AuthCredential type that was used.
    const credential = GoogleAuthProvider.credentialFromError(error);
    // ...
  });

</script>

<!-- then our app's own js file -->
<script src="js/main.js"></script>